install.packages(c("gmm", "phylolm", "phylopath", "VIF"))
setwd("~/Dropbox/#DOCUMENTS/#RESEARCH/R/200614_bird_brains/analyses_new")
require(phylolm)
require(ape)
require(caper)
require(geiger)
require(phylopath)
require(gmm)
require(lme4)
require(magrittr)
require(dplyr)
require(ggplot2)
require(MuMIn)
require (VIF)
rm(list = ls())
# set working directory
setwd("C:/Users/Michael/Dropbox/Manuscripts/bird brain size/bird brain size MS/analyses_new")
# main data set
birds <- read.delim("set_2.txt")
# relevel devo mode, chick modus, fam sys
birds$devo_mode <- relevel(birds$devo_mode, ref="precocial")
# add residuals:
birds$res_brain <- resid(lm(log(brain) ~ log(weight) + devo_mode,
data = birds, na.action=na.exclude))
birds$res_egg_mass <- resid(lm(log(egg_mass) ~ log(weight) ,
data = birds, na.action=na.exclude))
birds$res_weight <- resid(lm(log(weight) ~ log(egg_mass) ,
data = birds, na.action=na.exclude))
#centre and scale cont parameters
birds$weight <- scale(log(birds$weight))
birds$egg_mass <- scale(log(birds$egg_mass))
birds$time_fed <- scale(log(birds$time_fed + 1))
birds$food_energy <- scale((birds$food_energy))
birds$fibres <- scale(log(birds$fibres))
birds$caretakers <- scale(log(birds$caretakers + 1))
birds$clutch_size <- scale(log(birds$clutch_size))
birds$brain_log <- scale(log(birds$brain))
#select relevant columns
birds %<>%
dplyr::select(., tip_label,
time_fed,
egg_mass,
res_egg_mass,
devo_mode,
weight,
res_weight,
brain,
brain_log,
res_brain,
clutch_size,
food_energy,
fibres,
food_h_level,
social_bonds,
colonial,
foraging_3,
move_max,
insularity,
caretakers,
order,
family,
grouping,
grouping_n,
A1,
A2,
A3,
A4,
weight_c,
A1_c
)
# data set with complete data for selected columns
birds <- birds[complete.cases(birds),]
Jetz.tree <- read.nexus("Jetztree1.nex")
Jetz.tree <- read.nexus("Jetztree1.nex")
matches<-match(Jetz.tree$tip.label, birds$tip_label, nomatch=0)
not<-subset(Jetz.tree$tip.label, matches==0)
birdtree.Jetz<-drop.tip(Jetz.tree, not)
name.check(birdtree.Jetz, data, data.names = birds$tip_label)
names(birds)
rownames(birds)<-birds[,"tip_label"]
#clean up
remove(not,
matches,
Jetz.tree)
# separate data sets for precocial and altrical####
alt <- birds %>% filter(devo_mode == 'altrical')
prec <- birds %>% filter(devo_mode == 'precocial')
# tree for altrical and precocial
Jetz.tree <- read.nexus("Jetztree1.nex")
matches<-match(Jetz.tree$tip.label, alt$tip_label, nomatch=0)
not<-subset(Jetz.tree$tip.label, matches==0)
birdtree.Jetza<-drop.tip(Jetz.tree, not)
name.check(birdtree.Jetza, data, data.names = alt$tip_label)
names(alt)
rownames(alt)<-alt[,"tip_label"]
Jetz.tree <- read.nexus("Jetztree1.nex")
matches<-match(Jetz.tree$tip.label, prec$tip_label, nomatch=0)
not<-subset(Jetz.tree$tip.label, matches==0)
birdtree.Jetzp<-drop.tip(Jetz.tree, not)
name.check(birdtree.Jetza, data, data.names = prec$tip_label)
names(prec)
rownames(prec)<-prec[,"tip_label"]
#clean up
remove(not, matches, Jetz.tree)
library(MCMCglmm)
?inverseA
birdtree.Jetz.invA <- inverseA(birdtree.Jetz, nodes = "ALL")
birdtree.Jetz$edge.length
sort(birdtree.Jetz$edge.length)
birdtree.Jetz[which(birdtree.Jetz$edge.length == 0)] <- 1e-8
birdtree.Jetz.invA <- inverseA(birdtree.Jetz, nodes = "ALL", tol = 1e-8)
sort(birdtree.Jetz$edge.length)
birdtree.Jetz[which(birdtree.Jetz$edge.length == 0)]
#phylo tree####
Jetz.tree <- read.nexus("Jetztree1.nex")
matches<-match(Jetz.tree$tip.label, birds$tip_label, nomatch=0)
not<-subset(Jetz.tree$tip.label, matches==0)
birdtree.Jetz<-drop.tip(Jetz.tree, not)
name.check(birdtree.Jetz, data, data.names = birds$tip_label)
names(birds)
rownames(birds)<-birds[,"tip_label"]
#clean up
remove(not,
matches,
Jetz.tree)
# separate data sets for precocial and altrical####
alt <- birds %>% filter(devo_mode == 'altrical')
prec <- birds %>% filter(devo_mode == 'precocial')
# tree for altrical and precocial
Jetz.tree <- read.nexus("Jetztree1.nex")
matches<-match(Jetz.tree$tip.label, alt$tip_label, nomatch=0)
not<-subset(Jetz.tree$tip.label, matches==0)
birdtree.Jetza<-drop.tip(Jetz.tree, not)
name.check(birdtree.Jetza, data, data.names = alt$tip_label)
names(alt)
rownames(alt)<-alt[,"tip_label"]
Jetz.tree <- read.nexus("Jetztree1.nex")
matches<-match(Jetz.tree$tip.label, prec$tip_label, nomatch=0)
not<-subset(Jetz.tree$tip.label, matches==0)
birdtree.Jetzp<-drop.tip(Jetz.tree, not)
name.check(birdtree.Jetza, data, data.names = prec$tip_label)
names(prec)
rownames(prec)<-prec[,"tip_label"]
which(birdtree.Jetz$edge.length == 0)
birdtree.Jetz[which(birdtree.Jetz$edge.length == 0)]
birdtree.Jetz$edge.length
sort(birdtree.Jetz$edge.length)
birdtree.Jetz$edge.length[which(birdtree.Jetz$edge.length == 0)] <- 1e-8
birdtree.Jetz.invA <- inverseA(birdtree.Jetz, nodes = "ALL", tol = 1e-8)
prior <- list(R = list(V = 1, nu = 0.002), G = list(G1 = list(V = 1, nu = 0.002, alpha.mu = 0, alpha.V = 1e5)))
head(birds)
prior <- list(R = list(V = 1, nu = 0.002), G = list(G1 = list(V = 1, nu = 0.002, alpha.mu = 0, alpha.V = 1e5)))
model_alloc_simple<-MCMCglmm(log(brain) ~ devo_mode + weight + time_fed + res_egg_mass + clutch_size,
data = birds,
random = ~tip_label,
ginverse = list(tip_label = birdtree.Jetz.invA$Ainv),
nitt = 50000, thin = 80, burnin = 5000)
model_alloc_simple<-MCMCglmm(log(brain) ~ devo_mode + weight + time_fed + res_egg_mass + clutch_size,
data = birds,
random = ~tip_label,
ginverse = list(tip_label = birdtree.Jetz.invA$Ainv),
nitt = 50000, thin = 80, burnin = 5000, family = "gaussian")
?MCMCglmm
names(birds)
names(birds)[22]
names(birds)[22] <- "fam_taxo"
model_alloc_simple<-MCMCglmm(log(brain) ~ devo_mode + weight + time_fed + res_egg_mass + clutch_size,
data = birds,
random = ~tip_label,
ginverse = list(tip_label = birdtree.Jetz.invA$Ainv),
nitt = 50000, thin = 80, burnin = 5000, family = "gaussian")
autocorr.plot(model_alloc_simple$Sol)
autocorr.plot(model_alloc_simple$VCV)
plot(model_alloc_simple$VCV)
summary(model_alloc_simple)
predictions <- predict(model_alloc_simple)
residuals <- residuals(model_alloc_simple)
residuals <- log(birds$brain)) - predictions
residuals <- log(birds$brain) - predictions
plot(predictions, residuals)
gplot(predictions, residuals)
qplot(predictions, residuals)
qplot(predictions, residuals) + bw_theme()
qplot(predictions, residuals) + theme_bw(())
qplot(predictions, residuals) + theme_bw()
qplot(predictions, residuals) + theme_classic()
summary(model_alloc_simple)
prior <- list(R = list(V = 1, nu = 0.002), G = list(G1 = list(V = 1, nu = 0.002, alpha.mu = 0, alpha.V = 1e5)))
model_alloc_simple<-MCMCglmm(log(brain) ~ devo_mode + weight + time_fed + res_egg_mass + clutch_size,
data = birds,
random = ~tip_label,
ginverse = list(tip_label = birdtree.Jetz.invA$Ainv),
nitt = 120000, thin = 100, burnin = 20000, family = "gaussian")
autocorr.plot(model_alloc_simple$VCV)
autocorr.plot(model_alloc_simple$Sol)
plot(model_alloc_simple$VCV)
summary(model_alloc_simple)
predictions <- predict(model_alloc_simple)
residuals <- log(birds$brain) - predictions
qplot(predictions, residuals) + theme_classic()
qplot(weight, log(brain), data = birds) + theme_classic()
qplot(log(weight), log(brain), data = birds) + theme_classic()
qplot(res_egg_mass, log(brain), data = birds)
qplot(res_egg_mass, log(brain), data = birds) + theme_classic() + geom_smooth(method = "lm")
qplot(clutch_size, log(brain), data = birds) + theme_classic() + geom_smooth(method = "lm")
pairs(birds[,c("brain", "weight", "res_egg_mass", "clutch_size")])
?pairs
pairs(~ log(brain) + weight + res_egg_mass + clutch_size, data = birds)
prior <- list(R = list(V = 1, nu = 0.002), G = list(G1 = list(V = 1, nu = 0.002, alpha.mu = 0, alpha.V = 1e5)))
model_alloc_simple<-MCMCglmm(log(brain) ~ devo_mode:weight + caretakers:time_fed + devo_mode:time_fed +
time_fed:weight + devo_mode:caretakers + res_egg_mass:devo_mode +
res_egg_mass:time_fed + res_egg_mass:weight + res_egg_mass:caretakers +
clutch_size:devo_mode + clutch_size:weight + clutch_size:res_egg_mass + clutch_size:time_fed,
data = birds,
random = ~tip_label,
ginverse = list(tip_label = birdtree.Jetz.invA$Ainv),
nitt = 120000, thin = 100, burnin = 20000, family = "gaussian")
autocorr.plot(model_alloc_simple$VCV)
autocorr.plot(model_alloc_simple$Sol)
plot(model_alloc_simple$VCV)
summary(model_alloc_simple)
predictions <- predict(model_alloc_simple)
residuals <- log(birds$brain) - predictions
qplot(predictions, residuals) + theme_classic()
qplot(weight, log(brain), data = birds) + theme_classic()
qplot(res_egg_mass, log(brain), data = birds) + theme_classic() + geom_smooth(method = "lm")
pairs(~ log(brain) + weight + res_egg_mass + clutch_size, data = birds)
summary(model_alloc_simple)
model_alloc_simple<-MCMCglmm(log(brain) ~ devo_mode + weight + time_fed + res_egg_mass + clutch_size,
data = birds,
random = ~tip_label,
ginverse = list(tip_label = birdtree.Jetz.invA$Ainv),
nitt = 120000, thin = 100, burnin = 20000, family = "gaussian")
summary(model_alloc_simple)
prior <- list(R = list(V = 1, nu = 0.002), G = list(G1 = list(V = 1, nu = 0.002, alpha.mu = 0, alpha.V = 1e5)))
model_alloc_simple<-MCMCglmm(log(brain) ~ weight + foraging_3 + move_max +
food_energy + food_h_level + fibres + social_bonds + insularity + colonial + grouping,
data = birds,
random = ~tip_label,
ginverse = list(tip_label = birdtree.Jetz.invA$Ainv),
nitt = 120000, thin = 100, burnin = 20000, family = "gaussian")
autocorr.plot(model_alloc_simple$VCV)
autocorr.plot(model_alloc_simple$Sol)
plot(model_alloc_simple$VCV)
summary(model_alloc_simple)
predictions <- predict(model_alloc_simple)
residuals <- log(birds$brain) - predictions
qplot(predictions, residuals) + theme_classic()
model_alloc_simple<-MCMCglmm(log(brain) ~ weight + foraging_3 + move_max +
food_energy + food_h_level + fibres + social_bonds + insularity + colonial + grouping +
temp_rain + temp_stdv + temp_range,
data = birds,
random = ~tip_label,
ginverse = list(tip_label = birdtree.Jetz.invA$Ainv),
nitt = 120000, thin = 100, burnin = 20000, family = "gaussian")
model_alloc_simple<-MCMCglmm(log(brain) ~ weight + foraging_3 + move_max +
food_energy + food_h_level + fibres + social_bonds + insularity + colonial + grouping +
foraging_3:weight + move_max:weight +
food_energy:weight + food_h_level:weight + fibres:weight+insularity:weight+social_bonds:weight +
colonial:weight + grouping:weight +A1:weight,
data = birds,
random = ~tip_label,
ginverse = list(tip_label = birdtree.Jetz.invA$Ainv),
nitt = 120000, thin = 100, burnin = 20000, family = "gaussian")
summary(model_alloc_simple)
install.packages(c("ape", "caper", "MuMIn", "phylolm", "plotly"))
install.packages(c("gdata", "geiger", "MCMCglmm", "phytools"))
# packages
library(magrittr)
library(dplyr)
library(ape)
library(caper)
library(ggplot2)
library(plotly)
library(MuMIn)
require(phylolm)
rm(list = ls())
# set working directory
setwd("C:/Users/Michael/Dropbox/Manuscripts/bird brain size/analyses_new")
setwd("~/Dropbox/#DOCUMENTS/#RESEARCH/R/200614_bird_brains/analyses_new")
# main data set
birds <- read.delim("set_2.txt")
# relevel chick modus
birds$devo_mode <- relevel(birds$devo_mode, ref="precocial")
# main data set
birds <- read.delim("set_2.txt")
# relevel chick modus
birds$devo_mode <- relevel(birds$devo_mode, ref="precocial")
summary(birds)
# main data set
birds <- read.table('set_2.txt', sep = '\t', head = T)
# relevel chick modus
birds$devo_mode <- relevel(birds$devo_mode, ref="precocial")
# main data set
birds <- read.table('set_2.txt', sep = '\t', head = T, stringsAsFactors = T)
summary(birds)
?read.table
default.stringsAsFactors()
# relevel chick modus
birds$devo_mode <- relevel(birds$devo_mode, ref="precocial")
birds$prec_others <- relevel(birds$prec_others, ref="precocial")
# main data set
birds <- read.table('set_2.txt', sep = '\t', head = T, stringsAsFactors = T)
names(birds)
